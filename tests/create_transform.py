"""Create data for test_transform."""
import numpy as np
from scipy.special import erf
from scipy.constants import mu_0
from empymod import filters


# # A -- Analytical Solutions # #

def test_freq(rho, off, f):
    """Frequency domain analytical half-space solution.
    - Source at x = y = z = 0 m
    - Receiver at y = z = 0 m; x = off
    - Resistivity of halfspace rho
    - Frequencies f
    """
    gamma = np.sqrt(mu_0*2j*np.pi*f*off**2/rho)
    return rho/(2*np.pi*off**3)*(1 + (1 + gamma)*np.exp(-gamma))


def test_time(rho, off, t, signal):
    """Time domain analytical half-space solution.
    - Source at x = y = z = 0 m
    - Receiver at y = z = 0 m; x = off
    - Resistivity of halfspace rho
    - Times t, t > 0 s
    - Impulse response if signal = 0
    - Switch-on response if signal = 1
    """
    tau = np.sqrt(mu_0*off**2/(rho*t))
    fact = rho/(2*np.pi*off**3)
    if signal == 1:
        return fact*(2 - erf(tau/2) + tau/np.sqrt(np.pi)*np.exp(-tau**2/4))
    elif signal == 0:
        return fact*tau**3/(4*t*np.sqrt(np.pi))*np.exp(-tau**2/4)


# Input was created with
# empymod.utils.check_time(1,10), signal, ft, ftarg, 0)

# # B -- FFTLog # #

# Signal = 0
rho = 10
off = 3000
signal = 0
t0_fftlog = np.array([1., 2., 3., 4., 5., 6., 7., 8., 9.])
tEM0_fftlog = test_time(rho, off, t0_fftlog, signal)

f = np.array([1.89386420e-05, 2.17215724e-05, 2.49134392e-05, 2.85743336e-05,
              3.27731764e-05, 3.75890163e-05, 4.31125177e-05, 4.94476675e-05,
              5.67137332e-05, 6.50475076e-05, 7.46058849e-05, 8.55688136e-05,
              9.81426851e-05, 1.12564219e-04, 1.29104918e-04, 1.48076183e-04,
              1.69835172e-04, 1.94791527e-04, 2.23415081e-04, 2.56244712e-04,
              2.93898478e-04, 3.37085260e-04, 3.86618104e-04, 4.43429531e-04,
              5.08589087e-04, 5.83323485e-04, 6.69039697e-04, 7.67351440e-04,
              8.80109558e-04, 1.00943687e-03, 1.15776812e-03, 1.32789585e-03,
              1.52302292e-03, 1.74682284e-03, 2.00350896e-03, 2.29791369e-03,
              2.63557960e-03, 3.02286368e-03, 3.46705705e-03, 3.97652222e-03,
              4.56085052e-03, 5.23104268e-03, 5.99971594e-03, 6.88134154e-03,
              7.89251723e-03, 9.05227969e-03, 1.03824629e-02, 1.19081094e-02,
              1.36579412e-02, 1.56649014e-02, 1.79667734e-02, 2.06068929e-02,
              2.36349637e-02, 2.71079930e-02, 3.10913650e-02, 3.56600719e-02,
              4.09001254e-02, 4.69101763e-02, 5.38033714e-02, 6.17094841e-02,
              7.07773569e-02, 8.11777043e-02, 9.31063262e-02, 1.06787794e-01,
              1.22479679e-01, 1.40477402e-01, 1.61119791e-01, 1.84795468e-01,
              2.11950156e-01, 2.43095078e-01, 2.78816577e-01, 3.19787156e-01,
              3.66778138e-01, 4.20674189e-01, 4.82489972e-01, 5.53389248e-01,
              6.34706786e-01, 7.27973495e-01, 8.34945238e-01, 9.57635897e-01,
              1.09835528e+00, 1.25975261e+00, 1.44486640e+00, 1.65718166e+00,
              1.90069548e+00, 2.17999234e+00, 2.50033035e+00, 2.86774029e+00,
              3.28913912e+00, 3.77246021e+00, 4.32680271e+00, 4.96260282e+00,
              5.69183030e+00, 6.52821379e+00, 7.48749928e+00, 8.58774655e+00,
              9.84966917e+00, 1.12970245e+01, 1.29570607e+01, 1.48610303e+01])
f0_fftlog = f.copy()

# ftarg = [20, [-3, 2], 0]
ftarg = (np.array(20), np.array([-3.,  2.]), np.array(0.0),
         np.array([1.04189911e-02, 1.19500052e-02, 1.37059934e-02,
                   1.57200145e-02, 1.80299851e-02, 2.06793933e-02,
                   2.37181176e-02, 2.72033659e-02, 3.12007525e-02,
                   3.57855333e-02, 4.10440226e-02, 4.70752184e-02,
                   5.39926656e-02, 6.19265939e-02, 7.10263699e-02,
                   8.14633085e-02, 9.34338983e-02, 1.07163501e-01,
                   1.22910595e-01, 1.40971637e-01, 1.61686652e-01,
                   1.85445626e-01, 2.12695852e-01, 2.43950350e-01,
                   2.79797526e-01, 3.20912250e-01, 3.68068558e-01,
                   4.22154230e-01, 4.84187497e-01, 5.55336214e-01,
                   6.36939849e-01, 7.30534693e-01, 8.37882791e-01,
                   9.61005107e-01, 1.10221958e+00, 1.26418475e+00,
                   1.44994982e+00, 1.66301205e+00, 1.90738262e+00,
                   2.18766212e+00, 2.50912716e+00, 2.87782974e+00,
                   3.30071116e+00, 3.78573270e+00, 4.34202552e+00,
                   4.98006254e+00, 5.71185563e+00, 6.55118173e+00,
                   7.51384224e+00, 8.61796046e+00, 9.88432285e+00,
                   1.13367703e+01, 1.30026470e+01, 1.49133152e+01,
                   1.71047457e+01, 1.96181950e+01, 2.25009820e+01,
                   2.58073789e+01, 2.95996328e+01, 3.39491377e+01,
                   3.89377788e+01, 4.46594735e+01, 5.12219400e+01,
                   5.87487254e+01, 6.73815309e+01, 7.72828801e+01,
                   8.86391788e+01, 1.01664224e+02, 1.16603228e+02,
                   1.33737438e+02, 1.53389427e+02, 1.75929168e+02,
                   2.01781002e+02, 2.31431622e+02, 2.65439240e+02,
                   3.04444091e+02, 3.49180494e+02, 4.00490667e+02,
                   4.59340591e+02, 5.26838191e+02, 6.04254196e+02,
                   6.93046062e+02, 7.94885409e+02, 9.11689495e+02,
                   1.04565730e+03, 1.19931095e+03, 1.37554317e+03,
                   1.57767176e+03, 1.80950204e+03, 2.07539851e+03,
                   2.38036703e+03, 2.73014901e+03, 3.13132955e+03,
                   3.59146139e+03, 4.11920709e+03, 4.72450216e+03,
                   5.41874204e+03, 6.21499669e+03, 7.12825663e+03,
                   8.17571515e+03]),
         0.13710150042306449, 0.97286920170218782, 0.017940019572421466,
         np.array(0.0))
ftarg0_fftlog = ftarg

fEM0_fftlog = test_freq(rho, off, f)

# Signal = 1
rho = 10
off = 6000
signal = 1
t1_fftlog = np.logspace(-2, 1, 301)
tEM1_fftlog = test_time(rho, off, t1_fftlog, signal)

f = np.array([1.78574783e-04, 2.24812333e-04, 2.83021958e-04, 3.56303535e-04,
              4.48559575e-04, 5.64703048e-04, 7.10919017e-04, 8.94994016e-04,
              1.12673071e-03, 1.41846992e-03, 1.78574783e-03, 2.24812333e-03,
              2.83021958e-03, 3.56303535e-03, 4.48559575e-03, 5.64703048e-03,
              7.10919017e-03, 8.94994016e-03, 1.12673071e-02, 1.41846992e-02,
              1.78574783e-02, 2.24812333e-02, 2.83021958e-02, 3.56303535e-02,
              4.48559575e-02, 5.64703048e-02, 7.10919017e-02, 8.94994016e-02,
              1.12673071e-01, 1.41846992e-01, 1.78574783e-01, 2.24812333e-01,
              2.83021958e-01, 3.56303535e-01, 4.48559575e-01, 5.64703048e-01,
              7.10919017e-01, 8.94994016e-01, 1.12673071e+00, 1.41846992e+00,
              1.78574783e+00, 2.24812333e+00, 2.83021958e+00, 3.56303535e+00,
              4.48559575e+00, 5.64703048e+00, 7.10919017e+00, 8.94994016e+00,
              1.12673071e+01, 1.41846992e+01, 1.78574783e+01, 2.24812333e+01,
              2.83021958e+01, 3.56303535e+01, 4.48559575e+01, 5.64703048e+01,
              7.10919017e+01, 8.94994016e+01, 1.12673071e+02, 1.41846992e+02])


f1_fftlog = f.copy()

# ftarg = ['', '', -0.6]
ftarg = (np.array(10), np.array([-2.,  1.]), np.array(-0.6),
         np.array([1.18936991e-03, 1.49732800e-03, 1.88502427e-03,
                   2.37310496e-03, 2.98756214e-03, 3.76111790e-03,
                   4.73496690e-03, 5.96097015e-03, 7.50441680e-03,
                   9.44750102e-03, 1.18936991e-02, 1.49732800e-02,
                   1.88502427e-02, 2.37310496e-02, 2.98756214e-02,
                   3.76111790e-02, 4.73496690e-02, 5.96097015e-02,
                   7.50441680e-02, 9.44750102e-02, 1.18936991e-01,
                   1.49732800e-01, 1.88502427e-01, 2.37310496e-01,
                   2.98756214e-01, 3.76111790e-01, 4.73496690e-01,
                   5.96097015e-01, 7.50441680e-01, 9.44750102e-01,
                   1.18936991e+00, 1.49732800e+00, 1.88502427e+00,
                   2.37310496e+00, 2.98756214e+00, 3.76111790e+00,
                   4.73496690e+00, 5.96097015e+00, 7.50441680e+00,
                   9.44750102e+00, 1.18936991e+01, 1.49732800e+01,
                   1.88502427e+01, 2.37310496e+01, 2.98756214e+01,
                   3.76111790e+01, 4.73496690e+01, 5.96097015e+01,
                   7.50441680e+01, 9.44750102e+01, 1.18936991e+02,
                   1.49732800e+02, 1.88502427e+02, 2.37310496e+02,
                   2.98756214e+02, 3.76111790e+02, 4.73496690e+02,
                   5.96097015e+02, 7.50441680e+02, 9.44750102e+02]),
         0.23025850929940461, 1.0600270487397698, 1.4818455139068036,
         np.array(-0.6))

ftarg1_fftlog = ftarg

fEM1_fftlog = test_freq(rho, off, f)


# # C -- FFT # #

# Signal = 0
rho = 40
off = 2000
signal = 0
t0_fft = np.array([1., 2., 3., 4., 5., 6., 7., 8., 9.])
tEM0_fft = test_time(rho, off, t0_fft, signal)

f = np.array([1.62511584e-08, 1.86745978e-08, 2.14594304e-08, 2.46595486e-08,
              2.83368816e-08, 3.25625936e-08, 3.74184610e-08, 4.29984554e-08,
              4.94105613e-08, 5.67788668e-08, 6.52459642e-08, 7.49757099e-08,
              8.61563952e-08, 9.90043901e-08, 1.13768331e-07, 1.30733931e-07,
              1.50229510e-07, 1.72632351e-07, 1.98375995e-07, 2.27958636e-07,
              2.61952763e-07, 3.01016233e-07, 3.45905008e-07, 3.97487781e-07,
              4.56762788e-07, 5.24877128e-07, 6.03148957e-07, 6.93093003e-07,
              7.96449873e-07, 9.15219743e-07, 1.05170106e-06, 1.20853504e-06,
              1.38875674e-06, 1.59585384e-06, 1.83383410e-06, 2.10730296e-06,
              2.42155262e-06, 2.78266448e-06, 3.19762681e-06, 3.67447004e-06,
              4.22242207e-06, 4.85208696e-06, 5.57565007e-06, 6.40711386e-06,
              7.36256895e-06, 8.46050542e-06, 9.72217068e-06, 1.11719806e-05,
              1.28379922e-05, 1.47524462e-05, 1.69523915e-05, 1.94804016e-05,
              2.23853990e-05, 2.57236014e-05, 2.95596103e-05, 3.39676606e-05,
              3.90330575e-05, 4.48538270e-05, 5.15426136e-05, 5.92288595e-05,
              6.80613098e-05, 7.82108914e-05, 8.98740202e-05, 1.03276403e-04,
              1.18677403e-04, 1.36375064e-04, 1.56711873e-04, 1.80081390e-04,
              2.06935865e-04, 2.37794990e-04, 2.73255953e-04, 3.14005002e-04,
              3.60830715e-04, 4.14639270e-04, 4.76471978e-04, 5.47525433e-04,
              6.29174671e-04, 7.22999777e-04, 8.30816468e-04, 9.54711227e-04,
              1.09708168e-03, 1.26068300e-03, 1.44868121e-03, 1.66471450e-03,
              1.91296355e-03, 2.19823252e-03, 2.52604196e-03, 2.90273569e-03,
              3.33560354e-03, 3.83302242e-03, 4.40461844e-03, 5.06145320e-03,
              5.81623785e-03, 6.68357909e-03, 7.68026180e-03, 8.82557393e-03,
              1.01416797e-02, 1.16540486e-02, 1.33919481e-02, 1.53890103e-02,
              1.76838826e-02, 2.03209756e-02, 2.33513228e-02, 2.68335678e-02,
              3.08350995e-02, 3.54333560e-02, 4.07173233e-02, 4.67892575e-02,
              5.37666634e-02, 6.17845687e-02, 7.09981369e-02, 8.15856701e-02,
              9.37520597e-02, 1.07732751e-01, 1.23798301e-01, 1.42259611e-01,
              1.63473948e-01, 1.87851853e-01, 2.15865091e-01, 2.48055779e-01,
              2.85046874e-01, 3.27554232e-01, 3.76400462e-01, 4.32530842e-01,
              4.97031615e-01, 5.71151007e-01, 6.56323387e-01, 7.54197021e-01,
              8.66665973e-01, 9.95906757e-01, 1.14442046e+00, 1.31508113e+00,
              1.51119141e+00, 1.73654647e+00, 1.99550740e+00, 2.29308565e+00,
              2.63503998e+00, 3.02798795e+00, 3.47953393e+00, 3.99841629e+00,
              4.59467653e+00, 5.27985353e+00, 6.06720693e+00, 6.97197371e+00,
              8.01166301e+00, 9.20639505e+00, 1.05792904e+01, 1.21569176e+01,
              1.39698070e+01, 1.60530419e+01, 1.84469373e+01, 2.11978202e+01,
              2.43589261e+01, 2.79914290e+01, 3.21656257e+01, 3.69622956e+01,
              4.24742647e+01, 4.88082012e+01, 5.60866803e+01, 6.44505560e+01,
              7.40616872e+01, 8.51060696e+01, 9.77974356e+01, 1.12381390e+02,
              1.29140164e+02, 1.48398075e+02, 1.70527804e+02, 1.95957609e+02,
              2.25179611e+02, 2.58759318e+02, 2.97346569e+02, 3.41688108e+02,
              3.92642040e+02, 4.51194430e+02, 5.18478394e+02, 5.95796018e+02,
              6.84643563e+02, 7.86740418e+02, 9.04062374e+02, 1.03887986e+03,
              1.19380189e+03, 1.37182652e+03, 1.57639891e+03, 1.81147798e+03,
              2.08161301e+03, 2.39203167e+03, 2.74874124e+03, 3.15864481e+03,
              3.62967487e+03, 4.17094687e+03, 4.79293557e+03, 5.50767777e+03,
              6.32900526e+03, 7.27281248e+03, 8.35736409e+03, 9.60364849e+03,
              1.10357839e+04, 1.26814853e+04, 1.45726004e+04, 1.67457263e+04,
              1.92429176e+04, 2.21125004e+04, 2.54100071e+04, 2.91992516e+04,
              3.35535637e+04, 3.85572086e+04, 4.43070177e+04, 5.09142618e+04,
              5.85068053e+04, 6.72315800e+04, 7.72574288e+04, 8.87783734e+04,
              1.02017368e+05, 1.17230617e+05, 1.34712527e+05, 1.54801411e+05,
              1.77886032e+05])
f0_fft = f.copy()
# ftarg = None
ftarg0_fft = (filters.key_201_CosSin_2012(), None, 'sin')

fEM0_fft = test_freq(rho, off, f)

# Signal = 1
rho = .4
off = 1535
signal = 1
t1_fft = np.array([1.5, 2., 2.5, 3., 3.5, 4., 4.5, 5., 5.5])
tEM1_fft = test_time(rho, off, t1_fft, signal)

f = np.array([2.65928047e-08, 3.05584327e-08, 3.51154315e-08, 4.03519886e-08,
              4.63694426e-08, 5.32842440e-08, 6.12302090e-08, 7.03611088e-08,
              8.08536458e-08, 9.29108730e-08, 1.06766123e-07, 1.22687525e-07,
              1.40983192e-07, 1.62007184e-07, 1.86166359e-07, 2.13928250e-07,
              2.45830108e-07, 2.82489301e-07, 3.24615264e-07, 3.73023223e-07,
              4.28649976e-07, 4.92572017e-07, 5.66026376e-07, 6.50434550e-07,
              7.47430017e-07, 8.58889846e-07, 9.86971021e-07, 1.13415219e-06,
              1.30328161e-06, 1.49763231e-06, 1.72096538e-06, 1.97760279e-06,
              2.27251103e-06, 2.61139719e-06, 3.00081944e-06, 3.44831394e-06,
              3.96254066e-06, 4.55345096e-06, 5.23248024e-06, 6.01276915e-06,
              6.90941794e-06, 7.93977867e-06, 9.12379102e-06, 1.04843681e-05,
              1.20478401e-05, 1.38444634e-05, 1.59090066e-05, 1.82814228e-05,
              2.10076236e-05, 2.41403665e-05, 2.77402770e-05, 3.18770208e-05,
              3.66306528e-05, 4.20931660e-05, 4.83702715e-05, 5.55834447e-05,
              6.38722758e-05, 7.33971715e-05, 8.43424586e-05, 9.69199519e-05,
              1.11373052e-04, 1.27981459e-04, 1.47066579e-04, 1.68997750e-04,
              1.94199387e-04, 2.23159196e-04, 2.56437610e-04, 2.94678638e-04,
              3.38622325e-04, 3.89119074e-04, 4.47146106e-04, 5.13826366e-04,
              5.90450261e-04, 6.78500624e-04, 7.79681419e-04, 8.95950709e-04,
              1.02955855e-03, 1.18309054e-03, 1.35951786e-03, 1.56225473e-03,
              1.79522457e-03, 2.06293581e-03, 2.37056926e-03, 2.72407827e-03,
              3.13030399e-03, 3.59710775e-03, 4.13352321e-03, 4.74993114e-03,
              5.45826034e-03, 6.27221850e-03, 7.20755744e-03, 8.28237796e-03,
              9.51748012e-03, 1.09367658e-02, 1.25677011e-02, 1.44418482e-02,
              1.65954759e-02, 1.90702613e-02, 2.19140968e-02, 2.51820168e-02,
              2.89372624e-02, 3.32525056e-02, 3.82112556e-02, 4.39094747e-02,
              5.04574355e-02, 5.79818552e-02, 6.66283472e-02, 7.65642395e-02,
              8.79818128e-02, 1.01102021e-01, 1.16178769e-01, 1.33503824e-01,
              1.53412461e-01, 1.76289957e-01, 2.02579038e-01, 2.32788454e-01,
              2.67502823e-01, 3.07393941e-01, 3.53233786e-01, 4.05909456e-01,
              4.66440338e-01, 5.35997834e-01, 6.15928029e-01, 7.07777742e-01,
              8.13324460e-01, 9.34610739e-01, 1.07398372e+00, 1.23414058e+00,
              1.41818068e+00, 1.62966560e+00, 1.87268802e+00, 2.15195093e+00,
              2.47285868e+00, 2.84162150e+00, 3.26537575e+00, 3.75232197e+00,
              4.31188361e+00, 4.95488937e+00, 5.69378279e+00, 6.54286303e+00,
              7.51856159e+00, 8.63976032e+00, 9.92815680e+00, 1.14086842e+01,
              1.31099940e+01, 1.50650101e+01, 1.73115661e+01, 1.98931379e+01,
              2.28596841e+01, 2.62686140e+01, 3.01858974e+01, 3.46873422e+01,
              3.98600608e+01, 4.58041565e+01, 5.26346602e+01, 6.04837565e+01,
              6.95033423e+01, 7.98679656e+01, 9.17782041e+01, 1.05464546e+02,
              1.21191852e+02, 1.39264478e+02, 1.60032167e+02, 1.83896820e+02,
              2.11320268e+02, 2.42833213e+02, 2.79045497e+02, 3.20657906e+02,
              3.68475728e+02, 4.23424339e+02, 4.86567112e+02, 5.59125995e+02,
              6.42505156e+02, 7.38318159e+02, 8.48419190e+02, 9.74938938e+02,
              1.12032583e+03, 1.28739341e+03, 1.47937479e+03, 1.69998523e+03,
              1.95349400e+03, 2.24480703e+03, 2.57956186e+03, 2.96423670e+03,
              3.40627583e+03, 3.91423365e+03, 4.49794022e+03, 5.16869150e+03,
              5.93946797e+03, 6.82518579e+03, 7.84298548e+03, 9.01256363e+03,
              1.03565541e+04, 1.19009659e+04, 1.36756867e+04, 1.57150612e+04,
              1.80585555e+04, 2.07515214e+04, 2.38460733e+04, 2.74020975e+04,
              3.14884107e+04, 3.61840916e+04, 4.15800116e+04, 4.77805935e+04,
              5.49058315e+04, 6.30936142e+04, 7.25023926e+04, 8.33142466e+04,
              9.57384087e+04, 1.10015313e+05, 1.26421247e+05])
f1_fft = f.copy()
# ftarg = None
ftarg1_fft = (filters.key_201_CosSin_2012(), None, 'sin')

fEM1_fft = test_freq(rho, off, f)


# # D -- FQWE # #

# Signal = 0
rho = 200
off = 10000
signal = 0
t0_fqwe = np.array([1., 2., 3., 4., 5., 6., 7., 8., 9.])*4
tEM0_fqwe = test_time(rho, off, t0_fqwe, signal)

f = np.array([2.51188643e-04, 2.81838293e-04, 3.16227766e-04, 3.54813389e-04,
              3.98107171e-04, 4.46683592e-04, 5.01187234e-04, 5.62341325e-04,
              6.30957344e-04, 7.07945784e-04, 7.94328235e-04, 8.91250938e-04,
              1.00000000e-03, 1.12201845e-03, 1.25892541e-03, 1.41253754e-03,
              1.58489319e-03, 1.77827941e-03, 1.99526231e-03, 2.23872114e-03,
              2.51188643e-03, 2.81838293e-03, 3.16227766e-03, 3.54813389e-03,
              3.98107171e-03, 4.46683592e-03, 5.01187234e-03, 5.62341325e-03,
              6.30957344e-03, 7.07945784e-03, 7.94328235e-03, 8.91250938e-03,
              1.00000000e-02, 1.12201845e-02, 1.25892541e-02, 1.41253754e-02,
              1.58489319e-02, 1.77827941e-02, 1.99526231e-02, 2.23872114e-02,
              2.51188643e-02, 2.81838293e-02, 3.16227766e-02, 3.54813389e-02,
              3.98107171e-02, 4.46683592e-02, 5.01187234e-02, 5.62341325e-02,
              6.30957344e-02, 7.07945784e-02, 7.94328235e-02, 8.91250938e-02,
              1.00000000e-01, 1.12201845e-01, 1.25892541e-01, 1.41253754e-01,
              1.58489319e-01, 1.77827941e-01, 1.99526231e-01, 2.23872114e-01,
              2.51188643e-01, 2.81838293e-01, 3.16227766e-01, 3.54813389e-01,
              3.98107171e-01, 4.46683592e-01, 5.01187234e-01, 5.62341325e-01,
              6.30957344e-01, 7.07945784e-01, 7.94328235e-01, 8.91250938e-01,
              1.00000000e+00, 1.12201845e+00, 1.25892541e+00, 1.41253754e+00,
              1.58489319e+00, 1.77827941e+00, 1.99526231e+00, 2.23872114e+00,
              2.51188643e+00, 2.81838293e+00, 3.16227766e+00, 3.54813389e+00,
              3.98107171e+00, 4.46683592e+00, 5.01187234e+00, 5.62341325e+00,
              6.30957344e+00, 7.07945784e+00, 7.94328235e+00, 8.91250938e+00,
              1.00000000e+01, 1.12201845e+01, 1.25892541e+01, 1.41253754e+01,
              1.58489319e+01, 1.77827941e+01, 1.99526231e+01, 2.23872114e+01,
              2.51188643e+01, 2.81838293e+01, 3.16227766e+01, 3.54813389e+01,
              3.98107171e+01, 4.46683592e+01, 5.01187234e+01, 5.62341325e+01,
              6.30957344e+01, 7.07945784e+01, 7.94328235e+01, 8.91250938e+01,
              1.00000000e+02, 1.12201845e+02, 1.25892541e+02, 1.41253754e+02,
              1.58489319e+02])
f0_fqwe = f.copy()
# ftarg = None
ftarg0_fqwe = (np.array(1e-08), np.array(1e-20), np.array(21),
               np.array(200), np.array(20))

fEM0_fqwe = test_freq(rho, off, f)

# Signal = 1
rho = 33
off = 5035
signal = 1
t1_fqwe = np.array([1.5, 2., 2.5, 3., 3.5, 4., 4.5, 5., 5.5])*4
tEM1_fqwe = test_time(rho, off, t1_fqwe, signal)

f = np.array([3.98107171e-04, 4.46683592e-04, 5.01187234e-04, 5.62341325e-04,
              6.30957344e-04, 7.07945784e-04, 7.94328235e-04, 8.91250938e-04,
              1.00000000e-03, 1.12201845e-03, 1.25892541e-03, 1.41253754e-03,
              1.58489319e-03, 1.77827941e-03, 1.99526231e-03, 2.23872114e-03,
              2.51188643e-03, 2.81838293e-03, 3.16227766e-03, 3.54813389e-03,
              3.98107171e-03, 4.46683592e-03, 5.01187234e-03, 5.62341325e-03,
              6.30957344e-03, 7.07945784e-03, 7.94328235e-03, 8.91250938e-03,
              1.00000000e-02, 1.12201845e-02, 1.25892541e-02, 1.41253754e-02,
              1.58489319e-02, 1.77827941e-02, 1.99526231e-02, 2.23872114e-02,
              2.51188643e-02, 2.81838293e-02, 3.16227766e-02, 3.54813389e-02,
              3.98107171e-02, 4.46683592e-02, 5.01187234e-02, 5.62341325e-02,
              6.30957344e-02, 7.07945784e-02, 7.94328235e-02, 8.91250938e-02,
              1.00000000e-01, 1.12201845e-01, 1.25892541e-01, 1.41253754e-01,
              1.58489319e-01, 1.77827941e-01, 1.99526231e-01, 2.23872114e-01,
              2.51188643e-01, 2.81838293e-01, 3.16227766e-01, 3.54813389e-01,
              3.98107171e-01, 4.46683592e-01, 5.01187234e-01, 5.62341325e-01,
              6.30957344e-01, 7.07945784e-01, 7.94328235e-01, 8.91250938e-01,
              1.00000000e+00, 1.12201845e+00, 1.25892541e+00, 1.41253754e+00,
              1.58489319e+00, 1.77827941e+00, 1.99526231e+00, 2.23872114e+00,
              2.51188643e+00, 2.81838293e+00, 3.16227766e+00, 3.54813389e+00,
              3.98107171e+00, 4.46683592e+00, 5.01187234e+00, 5.62341325e+00,
              6.30957344e+00, 7.07945784e+00, 7.94328235e+00, 8.91250938e+00,
              1.00000000e+01, 1.12201845e+01, 1.25892541e+01, 1.41253754e+01,
              1.58489319e+01, 1.77827941e+01, 1.99526231e+01, 2.23872114e+01,
              2.51188643e+01, 2.81838293e+01, 3.16227766e+01, 3.54813389e+01,
              3.98107171e+01, 4.46683592e+01, 5.01187234e+01, 5.62341325e+01,
              6.30957344e+01, 7.07945784e+01, 7.94328235e+01, 8.91250938e+01,
              1.00000000e+02, 1.12201845e+02, 1.25892541e+02])
f1_fqwe = f.copy()

# ftarg = [1e-10, 1e-20]
ftarg1_fqwe = (np.array(1e-10), np.array(1e-20), np.array(21), np.array(200),
               np.array(20))


fEM1_fqwe = test_freq(rho, off, f)

# # F -- Store data # #
fftlog0 = {'fEM': fEM0_fftlog, 'tEM': tEM0_fftlog, 't': t0_fftlog,
           'f': f0_fftlog, 'ftarg': ftarg0_fftlog}
fftlog1 = {'fEM': fEM1_fftlog, 'tEM': tEM1_fftlog, 't': t1_fftlog,
           'f': f1_fftlog, 'ftarg': ftarg1_fftlog}
fft0 = {'fEM': fEM0_fft, 'tEM': tEM0_fft, 't': t0_fft,
        'f': f0_fft, 'ftarg': ftarg0_fft}
fft1 = {'fEM': fEM1_fft, 'tEM': tEM1_fft, 't': t1_fft,
        'f': f1_fft, 'ftarg': ftarg1_fft}
fqwe0 = {'fEM': fEM0_fqwe, 'tEM': tEM0_fqwe, 't': t0_fqwe,
         'f': f0_fqwe, 'ftarg': ftarg0_fqwe}
fqwe1 = {'fEM': fEM1_fqwe, 'tEM': tEM1_fqwe, 't': t1_fqwe,
         'f': f1_fqwe, 'ftarg': ftarg1_fqwe}

np.savez_compressed('data_transform.npz',
                    fftlog0=fftlog0, fftlog1=fftlog1,
                    fft0=fft0, fft1=fft1,
                    fqwe0=fqwe0, fqwe1=fqwe1)
